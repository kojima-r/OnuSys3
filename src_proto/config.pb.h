// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src_proto/config.proto

#ifndef PROTOBUF_src_5fproto_2fconfig_2eproto__INCLUDED
#define PROTOBUF_src_5fproto_2fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_src_5fproto_2fconfig_2eproto();
void protobuf_AssignDesc_src_5fproto_2fconfig_2eproto();
void protobuf_ShutdownFile_src_5fproto_2fconfig_2eproto();

class Config;
class Obj2dString;

// ===================================================================

class Config : public ::google::protobuf::Message {
 public:
  Config();
  virtual ~Config();

  Config(const Config& from);

  inline Config& operator=(const Config& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Config& default_instance();

  void Swap(Config* other);

  // implements Message ----------------------------------------------

  Config* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Config& from);
  void MergeFrom(const Config& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  inline void set_allocated_version(::std::string* version);

  // repeated .protocol.Obj2dString labels = 3;
  inline int labels_size() const;
  inline void clear_labels();
  static const int kLabelsFieldNumber = 3;
  inline const ::protocol::Obj2dString& labels(int index) const;
  inline ::protocol::Obj2dString* mutable_labels(int index);
  inline ::protocol::Obj2dString* add_labels();
  inline const ::google::protobuf::RepeatedPtrField< ::protocol::Obj2dString >&
      labels() const;
  inline ::google::protobuf::RepeatedPtrField< ::protocol::Obj2dString >*
      mutable_labels();

  // @@protoc_insertion_point(class_scope:protocol.Config)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* version_;
  ::google::protobuf::RepeatedPtrField< ::protocol::Obj2dString > labels_;
  friend void  protobuf_AddDesc_src_5fproto_2fconfig_2eproto();
  friend void protobuf_AssignDesc_src_5fproto_2fconfig_2eproto();
  friend void protobuf_ShutdownFile_src_5fproto_2fconfig_2eproto();

  void InitAsDefaultInstance();
  static Config* default_instance_;
};
// -------------------------------------------------------------------

class Obj2dString : public ::google::protobuf::Message {
 public:
  Obj2dString();
  virtual ~Obj2dString();

  Obj2dString(const Obj2dString& from);

  inline Obj2dString& operator=(const Obj2dString& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Obj2dString& default_instance();

  void Swap(Obj2dString* other);

  // implements Message ----------------------------------------------

  Obj2dString* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Obj2dString& from);
  void MergeFrom(const Obj2dString& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required string text = 2;
  inline bool has_text() const;
  inline void clear_text();
  static const int kTextFieldNumber = 2;
  inline const ::std::string& text() const;
  inline void set_text(const ::std::string& value);
  inline void set_text(const char* value);
  inline void set_text(const char* value, size_t size);
  inline ::std::string* mutable_text();
  inline ::std::string* release_text();
  inline void set_allocated_text(::std::string* text);

  // required float x = 3;
  inline bool has_x() const;
  inline void clear_x();
  static const int kXFieldNumber = 3;
  inline float x() const;
  inline void set_x(float value);

  // required float y = 4;
  inline bool has_y() const;
  inline void clear_y();
  static const int kYFieldNumber = 4;
  inline float y() const;
  inline void set_y(float value);

  // required float rad = 5;
  inline bool has_rad() const;
  inline void clear_rad();
  static const int kRadFieldNumber = 5;
  inline float rad() const;
  inline void set_rad(float value);

  // @@protoc_insertion_point(class_scope:protocol.Obj2dString)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_text();
  inline void clear_has_text();
  inline void set_has_x();
  inline void clear_has_x();
  inline void set_has_y();
  inline void clear_has_y();
  inline void set_has_rad();
  inline void clear_has_rad();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* text_;
  float x_;
  float y_;
  float rad_;
  friend void  protobuf_AddDesc_src_5fproto_2fconfig_2eproto();
  friend void protobuf_AssignDesc_src_5fproto_2fconfig_2eproto();
  friend void protobuf_ShutdownFile_src_5fproto_2fconfig_2eproto();

  void InitAsDefaultInstance();
  static Obj2dString* default_instance_;
};
// ===================================================================


// ===================================================================

// Config

// required string version = 1;
inline bool Config::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Config::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Config::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Config::clear_version() {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_->clear();
  }
  clear_has_version();
}
inline const ::std::string& Config::version() const {
  // @@protoc_insertion_point(field_get:protocol.Config.version)
  return *version_;
}
inline void Config::set_version(const ::std::string& value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.Config.version)
}
inline void Config::set_version(const char* value) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Config.version)
}
inline void Config::set_version(const char* value, size_t size) {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  version_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Config.version)
}
inline ::std::string* Config::mutable_version() {
  set_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    version_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Config.version)
  return version_;
}
inline ::std::string* Config::release_version() {
  clear_has_version();
  if (version_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = version_;
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Config::set_allocated_version(::std::string* version) {
  if (version_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete version_;
  }
  if (version) {
    set_has_version();
    version_ = version;
  } else {
    clear_has_version();
    version_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Config.version)
}

// repeated .protocol.Obj2dString labels = 3;
inline int Config::labels_size() const {
  return labels_.size();
}
inline void Config::clear_labels() {
  labels_.Clear();
}
inline const ::protocol::Obj2dString& Config::labels(int index) const {
  // @@protoc_insertion_point(field_get:protocol.Config.labels)
  return labels_.Get(index);
}
inline ::protocol::Obj2dString* Config::mutable_labels(int index) {
  // @@protoc_insertion_point(field_mutable:protocol.Config.labels)
  return labels_.Mutable(index);
}
inline ::protocol::Obj2dString* Config::add_labels() {
  // @@protoc_insertion_point(field_add:protocol.Config.labels)
  return labels_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::protocol::Obj2dString >&
Config::labels() const {
  // @@protoc_insertion_point(field_list:protocol.Config.labels)
  return labels_;
}
inline ::google::protobuf::RepeatedPtrField< ::protocol::Obj2dString >*
Config::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:protocol.Config.labels)
  return &labels_;
}

// -------------------------------------------------------------------

// Obj2dString

// required string name = 1;
inline bool Obj2dString::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Obj2dString::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Obj2dString::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Obj2dString::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Obj2dString::name() const {
  // @@protoc_insertion_point(field_get:protocol.Obj2dString.name)
  return *name_;
}
inline void Obj2dString::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.Obj2dString.name)
}
inline void Obj2dString::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Obj2dString.name)
}
inline void Obj2dString::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Obj2dString.name)
}
inline ::std::string* Obj2dString::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Obj2dString.name)
  return name_;
}
inline ::std::string* Obj2dString::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Obj2dString::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Obj2dString.name)
}

// required string text = 2;
inline bool Obj2dString::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Obj2dString::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Obj2dString::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Obj2dString::clear_text() {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_->clear();
  }
  clear_has_text();
}
inline const ::std::string& Obj2dString::text() const {
  // @@protoc_insertion_point(field_get:protocol.Obj2dString.text)
  return *text_;
}
inline void Obj2dString::set_text(const ::std::string& value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.Obj2dString.text)
}
inline void Obj2dString::set_text(const char* value) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.Obj2dString.text)
}
inline void Obj2dString::set_text(const char* value, size_t size) {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  text_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.Obj2dString.text)
}
inline ::std::string* Obj2dString::mutable_text() {
  set_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    text_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.Obj2dString.text)
  return text_;
}
inline ::std::string* Obj2dString::release_text() {
  clear_has_text();
  if (text_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = text_;
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Obj2dString::set_allocated_text(::std::string* text) {
  if (text_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete text_;
  }
  if (text) {
    set_has_text();
    text_ = text;
  } else {
    clear_has_text();
    text_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Obj2dString.text)
}

// required float x = 3;
inline bool Obj2dString::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Obj2dString::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Obj2dString::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Obj2dString::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float Obj2dString::x() const {
  // @@protoc_insertion_point(field_get:protocol.Obj2dString.x)
  return x_;
}
inline void Obj2dString::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:protocol.Obj2dString.x)
}

// required float y = 4;
inline bool Obj2dString::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Obj2dString::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Obj2dString::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Obj2dString::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float Obj2dString::y() const {
  // @@protoc_insertion_point(field_get:protocol.Obj2dString.y)
  return y_;
}
inline void Obj2dString::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:protocol.Obj2dString.y)
}

// required float rad = 5;
inline bool Obj2dString::has_rad() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Obj2dString::set_has_rad() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Obj2dString::clear_has_rad() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Obj2dString::clear_rad() {
  rad_ = 0;
  clear_has_rad();
}
inline float Obj2dString::rad() const {
  // @@protoc_insertion_point(field_get:protocol.Obj2dString.rad)
  return rad_;
}
inline void Obj2dString::set_rad(float value) {
  set_has_rad();
  rad_ = value;
  // @@protoc_insertion_point(field_set:protocol.Obj2dString.rad)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_src_5fproto_2fconfig_2eproto__INCLUDED
